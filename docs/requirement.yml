# -----------------------------------------------------------------------------
# 要件定義書: wind-compass
# Version: 2.0 (最終確定版)
# -----------------------------------------------------------------------------

project_name: "wind-compass"
version: "2.0"

# 1. 概要と背景 (Why)
overview_and_background:
  purpose: >
    風力発電機をどこに設置するか考えるとき、どの向きに置くか、どんな部品を使うかは、年間の発電量に大きく影響します。
  problem_to_solve: >
    この「wind-compass」プロジェクトは、手元にある風のデータと、いくつかの簡単な設定を使ってシミュレーションを行い、
    「だいたいどれくらい発電しそうか」「設置する価値があるか」といった、おおよその当たりをつけるためのツールを開発します。

# 2. システム化の目的とゴール
system_purpose_and_goals:
  purpose: >
    利用者が、いくつかの設置パターンや設定の組み合わせについて、発電量がどう変わるかを気軽に試せる（what-if分析）環境を提供します。
  success_criteria:
    # - いろいろなシナリオ（設置方角・変速比の組み合わせ）で、年間の発電量がどれくらいになるかを簡単に計算し、比較できること。 # 変速比はスコープ外
    - いろいろなシナリオ（設置方角の組み合わせ）で、年間の発電量がどれくらいになるかを簡単に計算し、比較できること。
    - 風車や発電機の性能モデルを、外部の設定ファイルで手軽に入れ替えて試せること。
    - 1年分のデータを使った計算が、ストレスなく待てる時間で終わること。

# 3. スコープ定義
scope_definition:
  in_scope:
    - 指定された風況データファイルおよび設備特性コンフィグファイルの読み込み。
    # - 複数の「固定角度」と「変速比」の組み合わせシナリオに基づいた、年間発電量のシミュレーション計算。 # 変速比はスコープ外
    - 複数の「固定角度」の組み合わせシナリオに基づいた、年間発電量のシミュレーション計算。
    - 全シナリオの計算結果を一覧できる、比較レポートの生成。
  out_of_scope:
    - 風車の風向追従（ヨーイング）機能のシミュレーション。
    - 複数風車間の相互影響（ウェイク効果）。
    - 発電コストや売電価格などを含めた、詳細な経済性評価。
    - 気象データの取得や予測。
    - 変速比の変更による発電量シミュレーション (v2.0ではスコープ外)

# 4. 主要なステークホルダーと役割
stakeholders_and_roles:
  - role: "データ分析者 / 研究者"
    description: "本システムの主たるアクター（利用者）。風況データや設備モデルを用意し、本システムを用いてシミュレーションを実行し、結果を分析する。"
    expectation: "複雑な計算を手でやる代わりに、このツールで手軽にいろいろなパターンを試してみたい。"
    ddd_note: "本システムのドメインエキスパート。ユビキタス言語の形成に不可欠。"
  - role: "発電事業者 / 投資家"
    description: "本システムのステークホルダー。シミュレーション結果を、事業計画や投資判断の参考情報として利用する。"
    expectation: "データに基づいた、判断材料のひとつとなるような発電量の予測情報が欲しい。"

# 5. ユースケース定義
use_cases:
  - name: "複数シナリオの発電量シミュレーションを実行し、比較レポートを取得する"
    actor: "データ分析者 / 研究者"
    preconditions:
      - 風況データファイルが用意されている。
      - 設備特性コンフィグファイルが用意されている。
    postconditions:
      - 指定された全シナリオ（固定角度ごと）の年間発電量が計算される。
      - 結果が比較レポートとして出力される。
    basic_flow: |
      1. 利用者が、本システムの実行を指示する（CLI経由）。
      2. 利用者は、入力として「風況データファイルパス」「設備特性コンフィグファイルパス」および複数の「風車の固定角度」をコマンドラインオプションで指定する。また、任意で「効率」「電圧」「カットインRPM」も指定可能。
      3. システムは、指定されたファイルを読み込み、妥当性を検証する（コンフィグファイルの係数長チェックを含む）。
      4. システムは、指定された各「固定角度」のシミュレーションタスクを生成する。
      5. 各タスクにおいて、システムは時系列データを一行ずつ処理し、ドメインサービス(`PowerGenerationSimulator`)の計算ロジックに基づき、瞬時発電電力を算出する。
      6. システムは、各「固定角度」シナリオの年間総発電量を集計する。
      7. システムは、結果（角度ごとの年間発電量）を表形式で標準出力する。
    alternative_flows:
      - "ファイルが存在しない場合、エラーメッセージを表示して終了する。"
      - "ファイルのフォーマットが不正な場合、エラー箇所を明記したメッセージを表示して終了する。"
      - "計算処理中に予期せぬ問題が発生した場合、エラーとなったシナリオと原因を記録し、可能な限り他のシナリオの計算を続行する。"

# 6. ドメインモデル（初期案）
domain_model_initial_draft:
  # DDD Note: 以下の概念はドメイン層の中心に配置し、ユビキタス言語を用いて命名する。
  aggregates:
    - name: "SimulationBatch"
    - name: "SimulationScenario" # 角度のみで構成
  value_objects:
    - name: "WindReading"
    - name: "PowerPlantModel" # パワーカーブ、トルクカーブ、電流カーブを内包
    - name: "SimulationParameters" # 角度、効率、電圧、カットインRPMなど
    - name: "EffectiveWindSpeed"
    - name: "Power / Energy / Torque" # 単位を持つ物理量
  repositories_ports: # (DDD) データ永続化層との契約を定義するリポジトリインターフェース
    - name: "WindDataReader"
      description: "風況データ（WindReadingの集合）を取得する責務を持つポート"
      layer: "use_cases"
    - name: "PowerPlantModelReader"
      description: "設備特性モデル（PowerPlantModel）を取得する責務を持つポート"
      layer: "use_cases"
  domain_services:
    - name: "PowerGenerationSimulator" # 確定した計算ロジック全体を担う

# 7. 機能要件
functional_requirements:
  - id: "FR-001"
    name: "データ入力機能"
    details:
      - "指定されたパスから、風況データファイル（CSV形式）を読み込めること。"
      - "CSVファイルから `observed_at` (日時型として解釈)、`max_wind_speed_mps` (浮動小数点数型として解釈)、`max_wind_direction_deg` (浮動小数点数型として解釈) カラムを正しく読み取れること。"
      - "指定されたパスから、設備特性コンフィグファイル（JSON形式）を読み込めること。`JsonConfigReader` は以下のスキーマ検証を行う:"
      - "  必須トップレベルキー (`turbine_power_curve`, `generator_torque_curve`, `generator_current_curve`) の存在。"
      - "  各カーブ定義内の必須キー `coeffs` の存在。"
      - "  `coeffs` がリスト型であること。"
      - "  `coeffs` の要素数が正確に4であること (降べき順の3次多項式 $ax^3+bx^2+cx+d$ に対応)。" # US-002完了報告より、係数長4のバリデーションを明記
      - "  `coeffs` の各要素が数値型（`int` または `float`）であること。"
      - "  上記スキーマ検証に失敗した場合、`JsonConfigReader` はファイルパスとエラー詳細を含む `ValueError` を送出する。"
      - "コンフィグファイルから読み込まれた係数リストは `PolynomialCurve` オブジェクトの生成に使用される。(`PolynomialCurve` 側でも初期化時に係数に関する追加バリデーションが実行される)"
      - "（FR-001-err-01）ファイルが存在しない場合、アダプタは `FileNotFoundError` を送出し、ユースケースはこれをラップした `ApplicationError`（または適切なドメイン例外/アプリケーション例外）を送出する。" # mainブランチ側の詳細なエラー記述を採用
      - "（FR-001-err-02）JSONファイルの構文が不正な場合、アダプタはファイルパスとエラー詳細を含む `ValueError` (原因: `json.JSONDecodeError`) を送出し、ユースケースはこれをラップした `ApplicationError` を送出する。" # mainブランチ側の詳細なエラー記述を採用
      - "（FR-001-err-03）JSONファイルが読み取れても、上記スキーマ検証に失敗した場合（係数長違反を含む）、アダプタはファイルパスとエラー詳細を含む `ValueError` を送出し、ユースケースはこれをラップした `ApplicationError` を送出する。" # mainブランチ側の詳細なエラー記述を採用し、係数長違反を明記
      - "（FR-001-err-04）風況データCSVファイルの形式が不正（必須カラム不足、データ型不一致等）な場合、`CsvWindDataReader` は `ValueError` を送出し、ユースケースはこれをラップした `ApplicationError` を送出する。風況データが空の場合もユースケースは `ApplicationError` を送出する。" # mainブランチ側の詳細なエラー記述を採用
      - "（FR-001-new-01）その他の予期せぬI/O関連エラーが発生した場合も、ユースケースは `ApplicationError` を送出する。" # mainブランチ側の記述を採用
  - id: "FR-002"
    name: "シナリオ設定機能"
    details:
      - "分析対象とする風車の固定角度 (`angles`) を角度（degree）で複数指定できること。CLIオプション `--angles` で指定し、カンマ区切りまたは複数回のオプション指定に対応し、入力値は正規化（重複排除・昇順ソート）されること。" # US-002完了報告を反映
      - "(FR-002-note-01) 変速比 (`gear_ratios`) の比較機能は、物理モデルとドキュメント定義の整合性に関する課題のため、本バージョン(v2.0)ではスコープ外とする。" # US-002完了報告を反映
      - "(FR-002-add-01) 分析パラメータとして、効率 (`--efficiency`、0.0-1.0の範囲が期待される浮動小数点数)、発電機出力電圧 (`--voltage`、V単位の浮動小数点数)、カットイン回転数 (`--cut-in-rpm`、rpm単位の浮動小数点数) を任意でCLIオプションとして指定できること。指定がない場合は、システム定義のデフォルト値（効率:1.0, 電圧:100.0, カットインRPM:0.0）が使用されること。" # US-002完了報告とmainブランチ側の記述を統合
  - id: "FR-003"
    name: "計算エンジン機能"
    details:
      - "有効風速 `V_eff` を `V_wind * cos(θ)` に基づき計算できること。ただし、風が後方から当たる場合（`cos(θ) < 0`）は `V_eff = 0` とする。"
      - "風車パワーカーブ（3次多項式モデル）を用いて、有効風速から風車が受け取る理論上の電力を計算できること。" # 多項式の次数を明記
      - "指定された伝達効率を適用し、発電機軸への機械的伝達電力を計算できること。"
      - "発電機トルク特性カーブ（3次多項式モデル、入力: 発電機回転数KRPM）と機械的伝達電力から、4次方程式 (`トルク(RPM) * RPM * 定数 - 伝達電力 = 0`) を数値的に解き（例: `numpy.roots`）、発電機回転数(RPM)を算出できること。その際、トルクカーブ係数のKRPM基準からRPM基準へのスケーリングを内部で行うこと。" # US-002完了報告を反映
      - "  上記方程式の解法において、物理的に意味のある正の実数解が複数存在する場合は、最小の解を選択すること。"
      - "  算出されたRPMが物理的に不適切なほど大きい場合（例: 10,000 RPM超）は、RPMを0として扱うこと。"
      - "  上記方程式の解が存在しない、または適切な正の実数解がない場合は、RPMを0として扱うこと。"
      - "算出された発電機回転数(RPM)を発電機電流特性カーブ（3次多項式モデル、入力: 発電機回転数KRPM）に入力し（RPMからKRPMへの変換を内部で行う）、発電電流を計算できること。" # US-002完了報告を反映
      - "算出された発電電流と指定された発電機電圧から、最終的な瞬時電気出力を計算できること。"
      - "算出された発電機回転数が、指定されたカットイン回転数以上であるかを判定し、満たない場合は発電量0として扱えること。"
      - "ユースケースは、上記計算エンジンで得られた各時刻の瞬時発電電力（W）を、風況データの連続する観測時刻の差から各区間の時間間隔（Δt、時間単位）を推定し、N-1個の区間について各区間の始点の瞬時電力を用いてエネルギーを積算し、年間総発電量（kWh）を算出する。風況データが0件または1件の場合は年間発電量を0 kWhとする。"
  - id: "FR-004"
    name: "レポート出力機能"
    details:
      - "全シナリオ（固定角度と、それに関連するパラメータセット）の年間発電量をまとめたマトリクス表をテキスト形式でコンソールに出力できること。"
      - "（FR-004-csv-01）CLI実行時に `--output-csv <filepath>` オプションを指定することで、コンソールに出力されるマトリクス表と同様の内容をCSVファイルとして指定された `<filepath>` に保存できること。"
      - "（FR-004-csv-02）`--output-csv` オプションが指定されない場合は、CSVファイルは生成されないこと。"
      - "（FR-004-csv-03）CSVファイルは、最初の行を列ヘッダー（例: 空白セル、パラメータBの各値）、最初の列を行ヘッダー（例: パラメータAの各値）とし、対応するセルに年間発電量を含む形式とすること。"
      - "（FR-004-csv-err-01）CSVファイル書き出し時にエラー（ファイルパス不正、書き込み権限なし等）が発生した場合、エラーメッセージをコンソールに出力すること。（注: CLIとしてのエラー終了処理は別途検討）"
      - "（オプション）結果を比較するグラフを画像ファイルとして出力できること。"

# 8. 非機能要件
non_functional_requirements:
  performance: "1年分の風況データ（約52,560行）と16シナリオ（角度のみ）の組み合わせについて、全体の計算処理が60秒以内に完了すること。" # シナリオ内容を具体化
  availability: "デスクトップで実行されるコマンドラインツール（CLI）を想定しており、常時稼働は要求されない。"
  security: "外部サービスとの通信はなく、ローカルファイルの読み書きに関する標準的なセキュリティに準拠すること。"
  maintainability_and_extensibility: "ドメイン層はUI層・インフラ層から完全に分離し、将来のロジック変更やUI変更が容易であること。"
  testability: "ドメイン層の計算ロジックは、外部依存なくユニットテストが可能であり、高いテストカバレッジを維持すること。"
  ui_ux: "CLIとして、ヘルプ機能や適切な進捗ログを提供し、ユーザーが直感的に操作できること。"

# 9. 受け入れ基準
acceptance_criteria:
  - use_case_id: "UC-001"
    name: "複数シナリオのシミュレーション"
    criteria:
      - id: "AC-001-01"
        scenario: |
          Given: 正しい形式の風況データと設備コンフィグファイルが存在する。
          # When: 利用者が複数の固定角度と変速比を指定して実行する。 # 変速比はスコープ外
          When: 利用者が複数の固定角度を指定して実行する。
          Then: 全組み合わせの計算がエラーなく完了し、結果がマトリクス表で出力される。
      - id: "AC-001-02"
        scenario: |
          Given: 風況データファイルのパスが間違っている。
          When: 利用者がシステムを実行する。
          Then: 「ファイルが見つかりません」というエラーメッセージが表示され、処理が終了する。 # エラーメッセージの具体性はApplicationErrorに依存

# 10. 用語集
glossary:
  - term: "シナリオ"
    english: "SimulationScenario"
    description: "特定の「固定角度」のみで構成されるシミュレーションの最小実行単位（現バージョン(v2.0)では変速比はスコープ外）。" # US-002完了報告を反映
  - term: "風車パワーカーブ"
    english: "TurbinePowerCurve"
    description: "風速(m/s)から、風車が受け取る電力(W)を算出する3次多項式モデル。" # 次数を明記
  - term: "発電機トルク特性カーブ"
    english: "GeneratorTorqueCurve"
    description: "発電機回転数(krpm)から、機械的なトルク(Nm)を算出する3次多項式モデル。" # 次数を明記
  - term: "発電機電流特性カーブ"
    english: "GeneratorCurrentCurve"
    description: "発電機回転数(krpm)から、電気的な電流(A)を算出する3次多項式モデル。" # 次数を明記

# 11. 制約条件・前提条件
constraints_and_assumptions:
  execution_environment: "Dockerコンテナ内での開発・実行を前提とする。"
  development_language: "Python 3.13.3以降"
  package_management:
    - "パッケージ管理は `pip` と `requirements.txt` ファイル群で行う。"
    - "本番用依存関係は `requirements.txt` に、開発・テスト用依存関係は `requirements-dev.txt` に定義する。"
  testing_framework:
    - "テストフレームワークには `pytest` を使用する。"
    - "テストコードは `tests/` ディレクトリ配下に配置する。"
  data_format:
    - "風況データはCSV形式とし、`observed_at`, `max_wind_speed_mps`, `max_wind_direction_deg` カラムを使用する。"
    - "風向は角度(degree)で与えられるものとする。"
    - "設備特性コンフィグはJSON形式とし、3種類の3次多項式係数（各4要素）を含むものとする。" # 係数長を明記

# -----------------------------------------------------------------------------
# 設計・開発に向けた確認事項
# -----------------------------------------------------------------------------
questions_for_clarification:
  - category: "UI/UX"
    question: "今は黒い画面（CLI）で使うイメージですが、将来的にはマウスで操作できる画面（GUI）やWebページで見られるようにしたい、といった考えはありますか？"
  - category: "データフォーマットの具体的なお話"
    question: "設備の設定ファイルには、どんな項目をどんな名前で書けると使いやすいか、具体的な構造のイメージはありますか？"
  - category: "エラーの時の動き"
    question: "もし風のデータに、ところどころ値が入っていない（欠損値）部分があったら、どう動くのが親切でしょうか？ (A: エラーで止める, B: その行は無視して計算, C: 前後の値から補う)"
  - category: "レポートの形式"
    question: "結果の表やグラフは、画面に出るだけで十分ですか？それとも、CSVや画像ファイルとして保存できる機能は、ぜひ欲しい機能でしょうか？"